name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
permissions: read-all

defaults:
  run:
    shell: bash
    
jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
        build_type: [Debug, Release]
        cxx_standard: [11, 17, 20]

    steps:
    
    - name: dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: googletest libeigen3-dev libboost-all-dev
        version: 1.0
        
    - name: install yaml-cpp
      run: |
        git clone https://github.com/jbeder/yaml-cpp.git
        mkdir -pv yaml-cpp/build
        cd yaml-cpp/build
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} ..
        make -j2
        sudo make install
        
    - uses: actions/checkout@v4
    
    - name: Configure
        run: |
          cmake \
            ${{ env.CMAKE_GENERATOR }} \
            -S "${{ github.workspace }}" \
            -B build \
            -D CMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} \
            -D CMAKE_INSTALL_PREFIX="${{ env.CMAKE_INSTALL_PREFIX }}" \
            -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} \
            -D CMAKE_CXX_FLAGS_DEBUG="${{ env.CMAKE_CXX_FLAGS_DEBUG }}" \
            -D YAML_BUILD_SHARED_LIBS=${{ env.YAML_BUILD_SHARED_LIBS }} \
            -D YAML_USE_SYSTEM_GTEST=${{ env.YAML_USE_SYSTEM_GTEST }} \
            -D YAML_CPP_BUILD_TESTS=ON

    - name: Build
      run: |
        cmake \
          --build build \
          --config ${{ env.CMAKE_BUILD_TYPE }} \
          --verbose \
          --parallel

    - name: Run Tests
      shell: bash
      run: |
        ctest \
          --test-dir build \
          --build-config ${{ env.CMAKE_BUILD_TYPE }} \
          --output-on-failure \
          --verbose
          
    # - run: |
    #     mkdir -pv build
    #     cd build
    #     cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} ..
    #     make -j2
    #     ctest -j2
